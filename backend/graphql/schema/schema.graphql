scalar Date

type Query {
    users: [User]!
    user(id: Int!): User!
    posts: [Post!]!
    post(id: Int!): Post!
    comments: [Comment]!
    comment(id: Int!): Comment!
}
type Mutation {
    createPost(post: PostInput!): Post!
    updatePost(id: Int!, post: UpdatePostInput!): Post!
    deletePost(id: Int!): Boolean!
    createUser(user: UserInput!): User!
}
input UserInput {
    firstName: String!
    lastName: String
    username: String!
    email: String!
}
input PostInput {
    title: String!
    content: String!
    authorId: Int!
}
input UpdatePostInput {
    title: String
    content: String
    updatedAt: Date
    likes: [Int!]
}
type User {
    id: Int!
    firstName: String!
    lastName: String
    username: String!
    email: String!
    posts: [Post!]!
    comments: [Comment!]!
    likedPosts: [Post!]
    likedComments: [Comment!]
}
type Post {
    id: Int!
    author: User!
    authorId: Int!
    createAt: Date!
    updatedAt: Date!
    title: String!
    content: String!
    likes: [User!]
}
type Comment {
    id: Int!
    author: User!
    authorId: Int!
    post: Post!
    postId: Int!
    body: String!
    createdAt: Date!
    updatedAt: Date!
    likes: [User!]
}
