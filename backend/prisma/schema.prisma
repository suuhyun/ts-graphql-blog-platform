// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  firstName     String
  lastName      String?
  username      String    @unique
  email         String    @unique
  password      String
  refreshToken  String?
  posts         Post[]    @relation("UserPosts")
  comments      Comment[] @relation("UserComments")
  likedPosts    Post[]    @relation("PostLikes")
  likedComments Comment[] @relation("CommentLikes")
}

model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  authorId  Int
  author    User      @relation("UserPosts", fields: [authorId], references: [id])
  comments  Comment[] @relation("PostComments")
  likes     User[]    @relation("PostLikes")
}

model Comment {
  id        Int      @id @default(autoincrement())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    Int
  post      Post     @relation("PostComments", fields: [postId], references: [id])
  authorId  Int
  author    User     @relation("UserComments", fields: [authorId], references: [id])
  likes     User[]   @relation("CommentLikes")
}
